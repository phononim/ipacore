import objs
import std/tables

const table: Table[IPALetter, string] = {
  VlsBlbStp: "p",
  VcdBlbStp: "b",
  VlsAlvStp: "t",
  VcdAlvStp: "d",
  VlsRfxStp: "tr)",
  VcdRfxStp: "dr)",
  VlsPalStp: "c",
  VcdPalStp: "j-",
  VlsVelStp: "k",
  VcdVelStp: "g",
  VlsUvlStp: "q",
  VcdUvlStp: "G",
  GltStp: "?",
  VcdBlbNas: "m",
  VcdLbdNas: "m\"",
  VcdAlvNas: "n",
  VcdRfxNas: "nr)",
  VcdPalNas: "nj)",
  VcdVelNas: "ng)",
  VcdUvlNas: "N",
  VcdBlbTrl: "B",
  VcdAlvTrl: "r",
  VcdUvlTrl: "R",
  VcdAlvTap: "r\"",
  VcdRfxTap: "rr)",
  VlsBlbFrc: "P\"",
  VcdBlbFrc: "B\"",
  VlsLbdFrc: "f",
  VcdLbdFrc: "v",
  VlsDntFrc: "O-",
  VcdDntFrc: "d-",
  VlsAlvFrc: "s",
  VcdAlvFrc: "z",
  VlsPlvFrc: "S",
  VcdPlvFrc: "3\"",
  VlsRfxFrc: "sr)",
  VcdRfxFrc: "zr)",
  VlsPalFrc: "c\"",
  VcdPalFrc: "j\"",
  VlsVelFrc: "x",
  VcdVelFrc: "g\"",
  VlsUvlFrc: "X",
  VcdUvlFrc: "R%",
  VlsPhrFrc: "h-",
  VcdPhrFrc: "?&",
  VlsGltFrc: "h",
  VcdGltFrc: "h\"",
  VlsAlvLatFrc: "l-",
  VcdAlvLatFrc: "l3\")",
  VcdLbdApr: "v\"",
  VcdAlvApr: "r&",
  VcdRfxApr: "jr)",
  VcdPalApr: "j",
  VcdVelApr: "m&\"",
  VcdAlvLatApr: "l",
  VcdRfxLatApr: "lr)",
  VcdPalLatApr: "y&",
  VcdVelLatApr: "L",
  VcdBlbImp: "b$",
  VcdAlvImp: "d$",
  VcdPalImp: "j$",
  VcdVelImp: "g$",
  VcdUvlImp: "G$",
  VlsLbvFrc: "w&",
  VcdLbvApr: "w",
  VcdLbpApr: "h&",
  VlsEpgTrl: "H",
  EpgStp: "?-",
  VcdEpgTrl: "?\"",
  VlsPalVelFrc: "Sx)",
  BlbClk: "p!",
  DntClk: "t!",
  AlvClk: "r!",
  PalClk: "c!",
  AlvLatClk: "l!",
  VcdAlvLatFlp: "l\"",
  VlsAlpFrc: "ci)",
  VcdAlpFrc: "zi)",
  VcdLbdFlp: "<?>",
  VzdAlvLatApr: "l~)",
  ClsFntUnrVwl: "i",
  ClsMidUnrVwl: "e",
  OpnMidFntUnrVwl: "E",
  OpnFntUnrVwl: "a",
  OpnBckUnrVwl: "a\"",
  OpnMidBckRndVwl: "c&",
  ClsMidBckRndVwl: "o",
  ClsBckRndVwl: "u",
  ClsFntRndVwl: "y",
  ClsMidFntRndVwl: "o/)",
  OpnMidFntRndVwl: "oe)",
  OpnFntRndVwl: "OE)",
  OpnBckRndVwl: "a\"&",
  OpnMidBckUnrVwl: "v&",
  ClsMidBckUnrVwl: "U\"",
  ClsBckUnrVwl: "m&",
  ClsCntUnrVwl: "i-",
  ClsCntRndVwl: "u-",
  NerClsNerFntUnrVwl: "I",
  NerClsNerFntRndVwl: "Y",
  NerClsNerBckRndVwl: "U",
  MidCntVwl: "@",
  ClsMidCntRndVwl: "o-",
  NerOpnCntVwl: "a&",
  NerOpnFntUnrVwl: "ae)",
  OpnMidCntUnrVwl: "E&",
  RzdMidCntVwl: "xr^",
  OpnMidCntRndVwl: "E\"",
  ClsMidCntUnrVwl: "e&",
  Ejc: "`",
  VlsA: "V)",
  VlsB: "V)",
  Vcd: "v)",
  Asp: "h^",
  MrmVcd: "h\")",
  CrkVcd: "~",
  Lgu: "{",
  Dnt: "[",
  Apc: "]",
  Lmn: "[]",
  MorRnd: "u)",
  LssRnd: "U)",
  Adv: "+",
  Rtc: "_",
  Cnt: "\"^",
  MidCnt: "x^",
  AdvTngRot: "<",
  RtcTngRot: ">",
  Rzd: "r^",
  Lzd: "w^",
  Pzd: "j^",
  Vzd: "g^",
  Fzd: "&g^",
  Nzd: "~^",
  NasRls: "n^",
  LatRls: "l^",
  NadRls: ".)",
  VzdFzd: "~)",
  Rsd: "=",
  Lwd: "=\"",
  Syl: ",)",
  NonSyl: "(",
  AfrDblArt: "))",
  PrmStr: "'",
  ScnStr: ",",
  Lng: ":",
  HlfLng: ";",
  ExtSht: "(^",
  SylBrk: ".",
  MnrGrp: "|",
  MjrGrp: "||",
  Lnk: "=)",
  GlbRse: "/",
  GlbFal: "\\",
  ExtHgh: "5",
  Hgh: "4",
  Mid: "3",
  Low: "2",
  ExtLow: "1",
  Ups: "/)",
  Dsp: "\\)",
  ExtHghB: "5B",
  HghB: "4B",
  MidB: "3B",
  LowB: "2B",
  ExtLowB: "1B",
  Rse: "15",
  Fal: "51",
  HghRse: "35",
  LowRse: "13",
  RseFal: "342"
}.toTable

const tableReverse: Table[string, IPALetter] = {
  "p": VlsBlbStp,
  "b": VcdBlbStp,
  "t": VlsAlvStp,
  "d": VcdAlvStp,
  "tr)": VlsRfxStp,
  "dr)": VcdRfxStp,
  "c": VlsPalStp,
  "j-": VcdPalStp,
  "k": VlsVelStp,
  "g": VcdVelStp,
  "q": VlsUvlStp,
  "G": VcdUvlStp,
  "?": GltStp,
  "m": VcdBlbNas,
  "m\"": VcdLbdNas,
  "n": VcdAlvNas,
  "nr)": VcdRfxNas,
  "nj)": VcdPalNas,
  "ng)": VcdVelNas,
  "N": VcdUvlNas,
  "B": VcdBlbTrl,
  "r": VcdAlvTrl,
  "R": VcdUvlTrl,
  "r\"": VcdAlvTap,
  "rr)": VcdRfxTap,
  "P\"": VlsBlbFrc,
  "B\"": VcdBlbFrc,
  "f": VlsLbdFrc,
  "v": VcdLbdFrc,
  "O-": VlsDntFrc,
  "d-": VcdDntFrc,
  "s": VlsAlvFrc,
  "z": VcdAlvFrc,
  "S": VlsPlvFrc,
  "3\"": VcdPlvFrc,
  "sr)": VlsRfxFrc,
  "zr)": VcdRfxFrc,
  "c\"": VlsPalFrc,
  "j\"": VcdPalFrc,
  "x": VlsVelFrc,
  "g\"": VcdVelFrc,
  "X": VlsUvlFrc,
  "R%": VcdUvlFrc,
  "h-": VlsPhrFrc,
  "?&": VcdPhrFrc,
  "h": VlsGltFrc,
  "h\"": VcdGltFrc,
  "l-": VlsAlvLatFrc,
  "l3\")": VcdAlvLatFrc,
  "v\"": VcdLbdApr,
  "r&": VcdAlvApr,
  "jr)": VcdRfxApr,
  "j": VcdPalApr,
  "m&\"": VcdVelApr,
  "l": VcdAlvLatApr,
  "lr)": VcdRfxLatApr,
  "y&": VcdPalLatApr,
  "L": VcdVelLatApr,
  "b$": VcdBlbImp,
  "d$": VcdAlvImp,
  "j$": VcdPalImp,
  "g$": VcdVelImp,
  "G$": VcdUvlImp,
  "w&": VlsLbvFrc,
  "w": VcdLbvApr,
  "h&": VcdLbpApr,
  "H": VlsEpgTrl,
  "?-": EpgStp,
  "?\"": VcdEpgTrl,
  "Sx)": VlsPalVelFrc,
  "p!": BlbClk,
  "t!": DntClk,
  "r!": AlvClk,
  "c!": PalClk,
  "l!": AlvLatClk,
  "l\"": VcdAlvLatFlp,
  "ci)": VlsAlpFrc,
  "zi)": VcdAlpFrc,
  "<?>": VcdLbdFlp,
  "l~)": VzdAlvLatApr,
  "i": ClsFntUnrVwl,
  "e": ClsMidUnrVwl,
  "E": OpnMidFntUnrVwl,
  "a": OpnFntUnrVwl,
  "a\"": OpnBckUnrVwl,
  "c&": OpnMidBckRndVwl,
  "o": ClsMidBckRndVwl,
  "u": ClsBckRndVwl,
  "y": ClsFntRndVwl,
  "o/)": ClsMidFntRndVwl,
  "oe)": OpnMidFntRndVwl,
  "OE)": OpnFntRndVwl,
  "a\"&": OpnBckRndVwl,
  "v&": OpnMidBckUnrVwl,
  "U\"": ClsMidBckUnrVwl,
  "m&": ClsBckUnrVwl,
  "i-": ClsCntUnrVwl,
  "u-": ClsCntRndVwl,
  "I": NerClsNerFntUnrVwl,
  "Y": NerClsNerFntRndVwl,
  "U": NerClsNerBckRndVwl,
  "@": MidCntVwl,
  "o-": ClsMidCntRndVwl,
  "a&": NerOpnCntVwl,
  "ae)": NerOpnFntUnrVwl,
  "E&": OpnMidCntUnrVwl,
  "xr^": RzdMidCntVwl,
  "E\"": OpnMidCntRndVwl,
  "e&": ClsMidCntUnrVwl,
  "`": Ejc,
  "V)": VlsA,
  "V)": VlsB,
  "v)": Vcd,
  "h^": Asp,
  "h\")": MrmVcd,
  "~": CrkVcd,
  "{": Lgu,
  "[": Dnt,
  "]": Apc,
  "[]": Lmn,
  "u)": MorRnd,
  "U)": LssRnd,
  "+": Adv,
  "_": Rtc,
  "\"^": Cnt,
  "x^": MidCnt,
  "<": AdvTngRot,
  ">": RtcTngRot,
  "r^": Rzd,
  "w^": Lzd,
  "j^": Pzd,
  "g^": Vzd,
  "&g^": Fzd,
  "~^": Nzd,
  "n^": NasRls,
  "l^": LatRls,
  ".)": NadRls,
  "~)": VzdFzd,
  "=": Rsd,
  "=\"": Lwd,
  ",)": Syl,
  "(": NonSyl,
  "))": AfrDblArt,
  "'": PrmStr,
  ",": ScnStr,
  ":": Lng,
  ";": HlfLng,
  "(^": ExtSht,
  ".": SylBrk,
  "|": MnrGrp,
  "||": MjrGrp,
  "=)": Lnk,
  "/": GlbRse,
  "\\": GlbFal,
  "5": ExtHgh,
  "4": Hgh,
  "3": Mid,
  "2": Low,
  "1": ExtLow,
  "/)": Ups,
  "\\)": Dsp,
  "5B": ExtHghB,
  "4B": HghB,
  "3B": MidB,
  "2B": LowB,
  "1B": ExtLowB,
  "15": Rse,
  "51": Fal,
  "35": HghRse,
  "13": LowRse,
  "342": RseFal
}.toTable

proc str*(letter: IPALetter): string = return table[letter]
proc letter*(str: string): IPALetter  = return tableReverse[str]